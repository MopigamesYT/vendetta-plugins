(function(r,i,s,c,u,m){"use strict";const{FormSection:l,FormSwitch:a,FormInput:n,FormSlider:o,FormSelect:d}=m.Forms,e=u.useProxy({connectAutomatically:!0,rampUpAndDown:!0,rampUpAndDownSteps:20,websocketUrl:"ws://localhost:12345",maxVibrationIntensity:70,targetWords:"",triggerWords:"",addOnWords:"",switchBlacklistToWhitelist:!1,listedUsers:"",listedChannels:"",listedGuilds:"",altOptions:"none",richPresence:!1,richPresenceTitle:"venPlugPlus",rpcDisconnectTimeout:5,allowDirectUserControl:!1,directControlAllowedUsers:"",directControlCommandPrefix:">."}),b=[{label:"None (Default)",value:"none"},{label:"DM Only",value:"dmOnly"},{label:"Current Channel Only",value:"currentChannelOnly"},{label:"Current Guild Only",value:"currentGuildOnly"}];function h(){return React.createElement(c.ReactNative.ScrollView,null,React.createElement(l,{title:"Connection Settings"},React.createElement(a,{label:"Connect Automatically",subLabel:"If true, it will connect to intiface on startup. (With this off, you need to re-enable the plugin to reconnect)",value:e.connectAutomatically,onValueChange:function(t){return e.connectAutomatically=t}}),React.createElement(n,{label:"Websocket URL",subLabel:"The URL of the websocket server",value:e.websocketUrl,onChange:function(t){return e.websocketUrl=t},placeholder:"ws://localhost:12345"})),React.createElement(l,{title:"Vibration Settings"},React.createElement(a,{label:"Ramp Up and Down",subLabel:"If true, it will try and smoothly ramp the vibration intensity up and down",value:e.rampUpAndDown,onValueChange:function(t){return e.rampUpAndDown=t}}),React.createElement(o,{label:"Ramp Up and Down Steps",subLabel:"How many steps to use when ramping up and down (Higher steps will add more delay)",value:e.rampUpAndDownSteps,minimumValue:0,maximumValue:40,step:1,onValueChange:function(t){return e.rampUpAndDownSteps=t}}),React.createElement(o,{label:"Max Vibration Intensity",subLabel:"The maximum intensity of vibration",value:e.maxVibrationIntensity,minimumValue:0,maximumValue:100,step:1,onValueChange:function(t){return e.maxVibrationIntensity=t}})),React.createElement(l,{title:"Trigger Settings"},React.createElement(n,{label:"Target Words",subLabel:"Comma-separated list of words to use as targets (used for detecting things when you were not mentioned)",value:e.targetWords,onChange:function(t){return e.targetWords=t}}),React.createElement(n,{label:"Trigger Words",subLabel:"Comma-separated list of words to use as triggers",value:e.triggerWords,onChange:function(t){return e.triggerWords=t}}),React.createElement(n,{label:"Add-On Words",subLabel:"Comma-separated list of words to add to the trigger words (increases vibration per word)",value:e.addOnWords,onChange:function(t){return e.addOnWords=t}})),React.createElement(l,{title:"Filtering Settings"},React.createElement(a,{label:"Switch Blacklist to Whitelist",subLabel:"If true, will switch the blacklist to a whitelist",value:e.switchBlacklistToWhitelist,onValueChange:function(t){return e.switchBlacklistToWhitelist=t}}),React.createElement(n,{label:"Listed Users",subLabel:"Comma-separated list of user IDs to blacklist/whitelist",value:e.listedUsers,onChange:function(t){return e.listedUsers=t}}),React.createElement(n,{label:"Listed Channels",subLabel:"Comma-separated list of channel IDs to blacklist/whitelist",value:e.listedChannels,onChange:function(t){return e.listedChannels=t}}),React.createElement(n,{label:"Listed Guilds",subLabel:"Comma-separated list of guild IDs to blacklist/whitelist",value:e.listedGuilds,onChange:function(t){return e.listedGuilds=t}})),React.createElement(l,{title:"Alternative Options"},React.createElement(d,{label:"Alternative Options",subLabel:"Alternative options to use",value:e.altOptions,options:b,onValueChange:function(t){return e.altOptions=t}})),React.createElement(l,{title:"Rich Presence"},React.createElement(a,{label:"Enable Rich Presence",subLabel:"Enable rich presence (requires restart)",value:e.richPresence,onValueChange:function(t){return e.richPresence=t}}),React.createElement(n,{label:"Rich Presence Title",subLabel:"The name of the rich presence",value:e.richPresenceTitle,onChange:function(t){return e.richPresenceTitle=t}}),React.createElement(o,{label:"RPC Disconnect Timeout",subLabel:"Timeout for the 'Intiface not connected' RPC (in minutes)",value:e.rpcDisconnectTimeout,minimumValue:1,maximumValue:30,step:1,onValueChange:function(t){return e.rpcDisconnectTimeout=t}})),React.createElement(l,{title:"Direct User Control"},React.createElement(a,{label:"Allow Direct User Control",subLabel:"Allow other users to directly control your toy",value:e.allowDirectUserControl,onValueChange:function(t){return e.allowDirectUserControl=t}}),React.createElement(n,{label:"Allowed Users",subLabel:"UserIDs to grant command access to",value:e.directControlAllowedUsers,onChange:function(t){return e.directControlAllowedUsers=t}}),React.createElement(n,{label:"Command Prefix",subLabel:"The prefix for the command to be used",value:e.directControlCommandPrefix,onChange:function(t){return e.directControlCommandPrefix=t||">."}})))}s.findByProps("sendBotMessage");var g={onLoad:function(){i.logger.log("Hello world! test")},onUnload:function(){i.logger.log("Goodbye, world.")},settings:h};return r.default=g,Object.defineProperty(r,"__esModule",{value:!0}),r})({},vendetta,vendetta.metro,vendetta.metro.common,vendetta.storage,vendetta.ui.components);
